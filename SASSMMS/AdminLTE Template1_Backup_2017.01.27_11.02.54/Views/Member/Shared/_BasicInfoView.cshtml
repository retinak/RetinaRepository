@model SSWebUI.Models.BasicInformation
 

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
   
    <div class="row">
        <div class="form-horizontal">
            <div class="col-xs-12 col-md-5">
                <div class="box box box-default">
                  
                    <div class="box box-body">
                        <div class="form-group">
                            <label class="control-label col-md-4">Attendance Number</label>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.AttendanceNmumber, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.AttendanceNmumber, "", new {@class = "text-danger"})
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label class="control-label col-md-4">First Name</label>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Middle Name</label>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Last Name</label>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.GrandfatherName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.GrandfatherName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Date of Birth</label>
                            <div class="input-group date col-md-8">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                <input type="text" class="form-control pull-right datepicker">
                            </div>

                         
                        </div>
                     
                      

                    </div>
                </div>
            </div>


            <div class="col-xs-10 col-md-6">
                <div class="box box box-default">

                  
                    <div class="box box-body">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.HiddenFor(model => model.MemberId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.HiddenFor(model => model.MemberId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MemberId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.ParentId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Current Status</label>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.CurrentStatus, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CurrentStatus, "", new { @class = "text-danger" })
                            </div>
                        </div>

                       
                        <div class="form-group">
                            @Html.LabelFor(model => model.DivisionId, "DivisionId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @*@Html.DropDownList("DivisionId", null, htmlAttributes: new { @class = "form-control" })*@
                               
                                @Html.ValidationMessageFor(model => model.DivisionId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*@(Html.Kendo().DropDownListFor(t => t.SchoolTypeId)
                                  .Name("SchoolTypeId")
                                  .DataTextField("Text")
                                  .DataValueField("Value")
                                  .Events(e =>
                                   {
                                       e.Select("onSelect");
                                   })
                                  .DataSource(source =>
                                   {
                                       source.Read(read =>
                                       {
                                           read.Action("GetSchoolTypeLookups", "SchoolInformation");
                                       });
                                   })
                                  .OptionLabel("...Select School Type...")
                                  .HtmlAttributes(new { style = "width: 292px", @required = "required" })
                        )*@
                      

                      


                        <div class="form-group">
                            <label class="control-label col-md-4">Gender</label>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                       
                      
                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-8">
                                <input type="submit" value="Create" class="btn btn-default btn btn-primary" />
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-2"></div>

                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
