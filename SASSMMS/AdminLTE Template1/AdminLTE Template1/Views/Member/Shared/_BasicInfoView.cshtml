@model SSWebUI.Models.MemberModel
@using Kendo.Mvc.UI


<div class="row">
        <div class="form-horizontal">
            <div class="col-xs-12 col-md-5">
                <div class="box box box-default">

                    <div class="box box-body">
                        <div class="form-group">
                            <label class="control-label col-md-4">Attendance Number</label>
                            <div class="col-md-8">
                                
                                @Html.EditorFor(model => model.AttendanceNmumber, new {htmlAttributes = new {@class = "form-control"}})
                                @*@Html.ValidationMessageFor(model => model.AttendanceNmumber, "", new {@class = "text-danger"})*@
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">First Name</label>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @*@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Middle Name</label>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                                @*@Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Last Name</label>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.GrandfatherName, new { htmlAttributes = new { @class = "form-control" } })
                                @*@Html.ValidationMessageFor(model => model.GrandfatherName, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                      



                    </div>
                </div>
            </div>


            <div class="col-xs-10 col-md-6">
                <div class="box box box-default">


                    <div class="box box-body">
                        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                        <div class="form-group">
                            @Html.HiddenFor(model => model.MemberId, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.HiddenFor(model => model.MemberId, new { htmlAttributes = new { @class = "form-control" } })
                                @*@Html.ValidationMessageFor(model => model.MemberId, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DivisionId, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @(Html.Kendo().DropDownListFor(t => t.DivisionId)
                              .Name("DivisionId")
                              .DataTextField("Text")
                              .DataValueField("Value")
                              .DataSource(source =>
                              {
                                  source.Read(read =>
                                  {
                                      read.Action("GetDivisions", "Member");
                                  });
                              }).OptionLabel("-- Select Department---")
                              .HtmlAttributes(new { style = "width :80%", @required = "required" }))
                                @*@Html.ValidationMessageFor(model => model.CategoryLevelId, "", new { @class = "text-danger" })*@



                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Current Status</label>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.CurrentStatus, new { htmlAttributes = new { @class = "form-control" } })

                                @*@Html.ValidationMessageFor(model => model.CurrentStatus, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-4">Gender</label>
                            <div class="col-md-8">
                                @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                               
                                @Html.RadioButtonFor(model=>model.Gender,"Male","Male")
                                @Html.RadioButtonFor(model=>model.Gender, "Female","Female")
                                @*@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })*@
                            </div>
                        </div>


                        <div class="form-group">
                            <label class="control-label col-md-4">Date of Birth</label>
                            <div class="input-group col-md-8">
                               @Html.EditorFor(model=>model.DateOfBirth, new { htmlAttributes= new {@class ="form-contrl"}})
                            </div>


                        </div>
                    </div>
                    <div class="col-xs-2"></div>

                </div>
            </div>
        </div>
    </div>
@*  *@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
